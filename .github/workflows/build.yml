name: 'publish'

on:
    push:
        branches:
            - dist

jobs:
    publish-tauri:
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                include:
                    - platform: 'macos-latest' # for Arm based macs (M1 and above).
                      target: 'aarch64-apple-darwin'
                      args: '--target aarch64-apple-darwin'
                    - platform: 'macos-latest' # for Intel based macs.
                      target: 'x86_64-apple-darwin'
                      args: '--target x86_64-apple-darwin'

                    - platform: 'ubuntu-22.04'
                      target: 'x86_64-unknown-linux-gnu'
                      args: ''
                    - platform: 'ubuntu-22.04'
                      target: 'aarch64-unknown-linux-gnu'
                      args: ''

                    - platform: 'windows-latest'
                      target: 'x86_64-pc-windows-msvc'
                      args: ''
                    - platform: 'windows-latest'
                      target: 'i686-pc-windows-msvc'
                      args: ''
                    - platform: 'windows-latest'
                      target: 'aarch64-pc-windows-msvc'
                      args: '--target aarch64-pc-windows-msvc'

        runs-on: ${{ matrix.platform }}
        timeout-minutes: 60
        steps:
            - uses: actions/checkout@v4

            - name: Install rust target
              run: rustup target add ${{ matrix.target }}

            - uses: pnpm/action-setup@v3
              with:
                  version: latest

            - name: Sync node version and setup cache
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: pnpm

            - name: install Rust stable
              uses: dtolnay/rust-toolchain@stable
              with:
                  targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

            - name: install dependencies (ubuntu only)
              if: matrix.platform == 'ubuntu-22.04'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

            - name: install frontend dependencies
              run: pnpm install # change this to npm, pnpm or bun depending on which one you use.

            - name: Regenerate Icons
              run: pnpm tauri icon

            - name: Create Apple icon
              if: matrix.platform == 'macos-latest'
              run: node ./cli/creatIcon.cjs

            - uses: tauri-apps/tauri-action@v0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tagName: PakeDist-v__VERSION__
                  releaseName: 'PakeDist v__VERSION__'
                  body_path: ./Note.md
                  releaseDraft: true
                  prerelease: false
                  args: ${{ matrix.args }}

    build-arm:
        runs-on: ubuntu-22.04

        strategy:
            matrix:
                arch: [aarch64, armv7l]
                include:
                    - arch: aarch64
                      cpu: cortex-a72
                      base_image: https://dietpi.com/downloads/images/DietPi_RPi-ARMv8-Bookworm.img.xz
                      deb: arm64
                      rpm: aarch64
                      appimage: aarch64
                    - arch: armv7l
                      cpu: cortex-a53
                      deb: armhfp
                      rpm: arm
                      appimage: armhf
                      base_image: https://dietpi.com/downloads/images/DietPi_RPi-ARMv7-Bookworm.img.xz

        steps:
            - uses: actions/checkout@v4

            - name: Cache rust build artifacts
              uses: Swatinem/rust-cache@v2
              with:
                  workspaces: src-tauri
                  cache-on-failure: true

            - name: Build app
              uses: pguyot/arm-runner-action@v2.6.5
              with:
                  base_image: ${{ matrix.base_image }}
                  cpu: ${{ matrix.cpu }}
                  bind_mount_repository: true
                  image_additional_mb: 10240
                  optimize_image: no
                  #exit_on_fail: no
                  commands: |
                      # Prevent Rust from complaining about $HOME not matching eid home
                      export HOME=/root
                      # Workaround to CI worker being stuck on Updating crates.io index
                      export CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse
                      # Install setup prerequisites
                      apt-get update -y --allow-releaseinfo-change
                      apt-get autoremove -y
                      apt-get install -y --no-install-recommends --no-install-suggests curl libwebkit2gtk-4.1-dev build-essential libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev patchelf libfuse2 file
                      curl https://sh.rustup.rs -sSf | sh -s -- -y
                      . "$HOME/.cargo/env"
                      curl -fsSL https://deb.nodesource.com/setup_lts.x | bash
                      apt-get install -y nodejs
                      # Install frontend dependencies
                      npm install -g pnpm
                      pnpm install
                      # Build the application
                      pnpm tauri build -- --verbose
            - name: Get app version
              run: echo "APP_VERSION=$(jq -r .version src-tauri/tauri.conf.json)" >> $GITHUB_ENV

            # TODO: Combine this with the basic workflow and upload the files to the Release.
            - name: Upload deb bundle
              uses: actions/upload-artifact@v4
              with:
                  name: Debian Bundle
                  path: ${{ github.workspace }}/src-tauri/target/release/bundle/deb/PakePlus_${{ env.APP_VERSION }}_${{ matrix.deb }}.deb

            - name: Upload rpm bundle
              uses: actions/upload-artifact@v4
              with:
                  name: RPM Bundle
                  path: ${{ github.workspace }}/src-tauri/target/release/bundle/rpm/PakePlus_${{ env.APP_VERSION }}-1.${{ matrix.rpm }}.rpm

            - name: Upload appimage bundle
              uses: actions/upload-artifact@v4
              with:
                  name: AppImage Bundle
                  path: ${{ github.workspace }}/src-tauri/target/release/bundle/appimage/PakePlus_${{ env.APP_VERSION }}_${{ matrix.appimage }}.AppImage
